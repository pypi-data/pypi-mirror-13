
# /Users/flavio/working_copies/minilanguage/minilanguage/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'B17DE08C0CBC97845D6C08A0CC54DF5D'
    
_lr_action_items = {'THEN':([2,3,4,5,6,7,8,10,11,12,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,40,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,-24,-14,-22,-23,-13,]),'LTE':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,32,32,32,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,32,-24,-14,-22,-23,-13,]),'NUMBER':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LBRACKET':([2,3,4,5,7,8,11,12,20,36,37,38,39,56,62,65,66,],[-29,-32,-31,16,-27,-30,-33,-28,16,-26,16,-25,-30,-24,16,-22,-23,]),'TRUE':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'DOT':([2,3,4,5,7,8,11,12,20,36,37,38,39,56,62,65,66,],[-29,-32,-31,17,-27,-30,-33,-28,17,-26,17,-25,-30,-24,17,-22,-23,]),'GTE':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,24,24,24,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,24,-24,-14,-22,-23,-13,]),'COMMENT':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,21,21,21,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,21,-24,-14,-22,-23,-13,]),'RPAREN':([2,3,4,5,6,7,8,10,11,12,15,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,61,62,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,36,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,-24,65,66,-14,-22,-23,-13,]),'NOT_EQUALS':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,25,25,25,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,25,-24,-14,-22,-23,-13,]),'+':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,26,26,26,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,26,-24,-14,-22,-23,-13,]),'*':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,27,27,27,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,27,-24,-14,-22,-23,-13,]),'-':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,28,28,28,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,28,-24,-14,-22,-23,-13,]),'/':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,30,30,30,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,30,-24,-14,-22,-23,-13,]),'LT':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,31,31,31,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,31,-24,-14,-22,-23,-13,]),'COMMA':([2,3,4,5,6,7,8,10,11,12,20,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,60,61,62,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,19,-33,-28,-21,-26,-25,-30,-18,19,19,19,19,19,19,19,19,19,19,19,19,19,-24,19,19,-19,-20,19,-22,-23,19,]),'$end':([2,3,4,5,6,7,8,10,11,12,14,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,0,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,-24,-14,-22,-23,-13,]),'GT':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,23,23,23,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,23,-24,-14,-22,-23,-13,]),'STRING':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'HEX':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'EQUALS':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,29,29,29,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,29,-24,-14,-22,-23,-13,]),'ELSE':([2,3,4,5,6,7,8,10,11,12,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,59,-24,63,-14,-22,-23,-13,]),'LPAREN':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,39,40,57,59,63,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,57,1,1,1,1,]),'IN':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,33,33,33,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,33,-24,-14,-22,-23,-13,]),'ID':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[8,8,8,8,8,39,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,18,20,21,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[9,9,-29,-32,-31,-20,-19,-27,-30,9,-17,-33,-28,35,35,35,-21,-1,9,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,35,-24,-14,-22,-23,-13,]),'AND':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,22,22,22,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,22,-24,-14,-22,-23,-13,]),'FALSE':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FLOAT':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NOT':([0,1,9,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'RBRACKET':([2,3,4,7,8,11,12,36,37,38,39,56,65,66,],[-29,-32,-31,-27,-30,-33,-28,-26,56,-25,-30,-24,-22,-23,]),'OR':([2,3,4,5,6,7,8,10,11,12,14,15,18,20,21,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,],[-29,-32,-31,-20,-19,-27,-30,-17,-33,-28,34,34,34,-21,-1,-26,-25,-30,-18,-4,-8,-10,-7,-2,-15,-3,-6,-16,-9,-11,-12,-5,34,-24,-14,-22,-23,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,1,9,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[10,10,10,41,42,43,44,45,46,47,48,49,50,51,52,53,54,10,58,60,64,67,]),'factor':([0,1,9,13,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[5,5,5,20,37,38,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,62,5,5,]),'expression':([0,1,9,35,],[14,15,18,55,]),'tuple':([0,1,9,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,57,59,63,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,61,6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression COMMENT','expression',2,'p_expression_comment','grammar.py',22),
  ('expression -> expression + term','expression',3,'p_expression_plus','grammar.py',26),
  ('expression -> expression - term','expression',3,'p_expression_minus','grammar.py',30),
  ('expression -> expression AND term','expression',3,'p_expression_and','grammar.py',34),
  ('expression -> expression OR term','expression',3,'p_expression_or','grammar.py',38),
  ('expression -> expression EQUALS term','expression',3,'p_expression_equals','grammar.py',42),
  ('expression -> expression NOT_EQUALS term','expression',3,'p_expression_not_equals','grammar.py',46),
  ('expression -> expression GT term','expression',3,'p_expression_gt','grammar.py',50),
  ('expression -> expression LT term','expression',3,'p_expression_lt','grammar.py',54),
  ('expression -> expression GTE term','expression',3,'p_expression_gte','grammar.py',58),
  ('expression -> expression LTE term','expression',3,'p_expression_lte','grammar.py',62),
  ('expression -> expression IN term','expression',3,'p_expression_in','grammar.py',66),
  ('expression -> IF expression THEN term ELSE term','expression',6,'p_expression_if_then_else','grammar.py',70),
  ('expression -> expression IF expression ELSE term','expression',5,'p_expression_if_else','grammar.py',74),
  ('expression -> expression * term','expression',3,'p_expression_times','grammar.py',78),
  ('expression -> expression / term','expression',3,'p_expression_div','grammar.py',82),
  ('expression -> term','expression',1,'p_expression_term','grammar.py',86),
  ('tuple -> term COMMA term','tuple',3,'p_tuple','grammar.py',90),
  ('term -> tuple','term',1,'p_term_tuple','grammar.py',94),
  ('term -> factor','term',1,'p_term_factor','grammar.py',98),
  ('term -> NOT factor','term',2,'p_term_not','grammar.py',102),
  ('factor -> factor DOT ID LPAREN tuple RPAREN','factor',6,'p_factor_method_args','grammar.py',106),
  ('factor -> factor DOT ID LPAREN factor RPAREN','factor',6,'p_factor_method','grammar.py',114),
  ('factor -> factor LBRACKET factor RBRACKET','factor',4,'p_factor_brackets','grammar.py',122),
  ('factor -> factor DOT factor','factor',3,'p_factor_dot','grammar.py',129),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','grammar.py',136),
  ('factor -> HEX','factor',1,'p_factor_hex','grammar.py',140),
  ('factor -> FLOAT','factor',1,'p_factor_float','grammar.py',144),
  ('factor -> NUMBER','factor',1,'p_factor_num','grammar.py',148),
  ('factor -> ID','factor',1,'p_factor_id','grammar.py',152),
  ('factor -> STRING','factor',1,'p_factor_string','grammar.py',156),
  ('factor -> TRUE','factor',1,'p_factor_true','grammar.py',160),
  ('factor -> FALSE','factor',1,'p_factor_false','grammar.py',164),
]
