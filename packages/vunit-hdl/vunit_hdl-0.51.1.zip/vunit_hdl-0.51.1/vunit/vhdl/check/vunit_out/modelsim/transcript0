#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_basic_check_functionality/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_basic_check_functionality/modelsim/vsim.wlf {-g/tb_basic_check_functionality/runner_cfg="enabled_test_cases : Verify default checker basic functionality,,Verify default check_passed and check_failed,,Verify default checker initialization,,Verify custom checker basic functionality,,Verify check_passed and check_failed with custom checker,,Verify custom checker initialization,,Verify checker_stat_t functions and operators,,Verify export of configuration,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_basic_check_functionality/"} -g/tb_basic_check_functionality/output_path=d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_basic_check_functionality/ lib.tb_basic_check_functionality(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 0 ps  Iteration: 4  Instance: /tb_basic_check_functionality
# ** Note: Number of assertions: 340
#    Time: 0 ps  Iteration: 4  Instance: /tb_basic_check_functionality
# ** Note: Number of errors: 0
#    Time: 0 ps  Iteration: 4  Instance: /tb_basic_check_functionality
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_equal/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_equal/modelsim/vsim.wlf {-g/tb_check_equal/runner_cfg="enabled_test_cases : Test should handle comparsion of vectors longer than 32 bits,,Test print full integer vector representation when check fails on comparison with vector too short to contain the integer,,Test should pass on unsigned equal unsigned,,Test should fail on unsigned not equal unsigned,,Test should pass on unsigned equal natural,,Test should fail on unsigned not equal natural,,Test should pass on natural equal unsigned,,Test should fail on natural not equal unsigned,,Test should pass on unsigned equal std_logic_vector,,Test should fail on unsigned not equal std_logic_vector,,Test should pass on std_logic_vector equal unsigned,,Test should fail on std_logic_vector not equal unsigned,,Test should pass on std_logic_vector equal std_logic_vector,,Test should fail on std_logic_vector not equal std_logic_vector,,Test should pass on signed equal signed,,Test should fail on signed not equal signed,,Test should pass on signed equal integer,,Test should fail on signed not equal integer,,Test should pass on integer equal signed,,Test should fail on integer not equal signed,,Test should pass on integer equal integer,,Test should fail on integer not equal integer,,Test should pass on std_logic equal std_logic,,Test should fail on std_logic not equal std_logic,,Test should pass on std_logic equal boolean,,Test should fail on std_logic not equal boolean,,Test should pass on boolean equal std_logic,,Test should fail on boolean not equal std_logic,,Test should pass on boolean equal boolean,,Test should fail on boolean not equal boolean,,Test should pass on natural equal natural,,Test should fail on natural not equal natural,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_equal/"} 
# lib.tb_check_equal(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_false/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_false/modelsim/vsim.wlf {-g/tb_check_false/runner_cfg="enabled_test_cases : Test should fail on true and logic 1 inputs to sequential checks,,Test should pass on false and logic 0 inputs to sequential checks,,Test should be possible to use concurrently,,Test should be possible to use concurrently with negative active clock edge,,Test should be possible to use concurrently with custom checker,,Test should pass on weak low but fail on other meta values,,Test should pass on logic high inputs when not enabled,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_false/"} lib.tb_check_false(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 261 ns  Iteration: 0  Instance: /tb_check_false
# ** Note: Number of assertions: 80
#    Time: 261 ns  Iteration: 0  Instance: /tb_check_false
# ** Note: Number of errors: 0
#    Time: 261 ns  Iteration: 0  Instance: /tb_check_false
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_implication/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_implication/modelsim/vsim.wlf {-g/tb_check_implication/runner_cfg="enabled_test_cases : Test sequential checkers should fail on true implies false but pass on other inputs,,Test should be possible to use concurrently,,Test should be possible to use concurrently with negative active clock edge,,Test should be possible to use concurrently with custom checker,,Test should handle weak known meta values as known values and others as unknowns,,Test should pass on true implies false when not enabled,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_implication/"} lib.tb_check_implication(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_implication
# ** Note: Number of assertions: 101
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_implication
# ** Note: Number of errors: 0
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_implication
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_match/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_match/modelsim/vsim.wlf {-g/tb_check_match/runner_cfg="enabled_test_cases : Test should pass on unsigned matching unsigned,,Test should fail on unsigned not matching unsigned,,Test should pass on std_logic_vector matching std_logic_vector,,Test should fail on std_logic_vector not matching std_logic_vector,,Test should pass on signed matching signed,,Test should fail on signed not matching signed,,Test should pass on std_logic matching std_logic,,Test should fail on std_logic not matching std_logic,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_match/"} lib.tb_check_match(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_next/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_next/modelsim/vsim.wlf {-g/tb_check_next/runner_cfg="enabled_test_cases : Test should pass when expr is true num cks enabled cycles after start event,,Test should fail when expr is false num cks enabled cycles after start event,,Test should handle a mix of passing and failing overlapping checks when allowed,,Test should pass a true expr without start event if missing start is allowed,,Test should fail when an overlapping check is initiated when not allowed,,Test should fail a true expr without start event if missing start is not allowed,,Test should handle meta values,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_next/"} lib.tb_check_next(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 1371 ns  Iteration: 0  Instance: /tb_check_next
# ** Note: Number of assertions: 89
#    Time: 1371 ns  Iteration: 0  Instance: /tb_check_next
# ** Note: Number of errors: 0
#    Time: 1371 ns  Iteration: 0  Instance: /tb_check_next
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_not_unknown/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_not_unknown/modelsim/vsim.wlf {-g/tb_check_not_unknown/runner_cfg="enabled_test_cases : Test should pass on zeros and ones,,Test should fail on all std logic values except zero and one,,Test should be possible to use concurrently,,Test should be possible to use concurrently with negative active clock edge,,Test should be possible to use concurrently with custom checker,,Test should handle reversed and or offset expressions,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_not_unknown/"} lib.tb_check_not_unknown(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 1731 ns  Iteration: 0  Instance: /tb_check_not_unknown
# ** Note: Number of assertions: 664
#    Time: 1731 ns  Iteration: 0  Instance: /tb_check_not_unknown
# ** Note: Number of errors: 0
#    Time: 1731 ns  Iteration: 0  Instance: /tb_check_not_unknown
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_one_hot/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_one_hot/modelsim/vsim.wlf {-g/tb_check_one_hot/runner_cfg="enabled_test_cases : Test should pass on one high bit,,Test should fail on zero or more than one high bit,,Test should fail on unknowns,,Test should be possible to use concurrently,,Test should be possible to use concurrently with negative active clock edge,,Test should be possible to use concurrently with custom checker,,Test should pass on unknowns when not enabled,,Test should handle reversed and or offset expressions,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_one_hot/"} lib.tb_check_one_hot(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_one_hot
# ** Note: Number of assertions: 228
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_one_hot
# ** Note: Number of errors: 0
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_one_hot
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_relation/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_relation/modelsim/vsim.wlf {-g/tb_check_relation/runner_cfg="enabled_test_cases : Test that a true relation does not generate an error,,Test that generated message is combined with a custom message,,Test that all pre VHDL 2008 relational operators are supported,,Test that all matching relational operators are supported,,Test that a generated message can contain string containing operands,,Test that custom types can be used,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_relation/"} lib.tb_check_relation(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 0 ps  Iteration: 4  Instance: /tb_check_relation
# ** Note: Number of assertions: 210
#    Time: 0 ps  Iteration: 4  Instance: /tb_check_relation
# ** Note: Number of errors: 0
#    Time: 0 ps  Iteration: 4  Instance: /tb_check_relation
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_sequence/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_sequence/modelsim/vsim.wlf {-g/tb_check_sequence/runner_cfg="enabled_test_cases : Test should fail on sequences shorter than two events,,Test should pass a most triggered pipelined and sequentially asserted event sequence,,Test should fail a most triggered but interrupted event sequence,,Test should pass a first triggered pipelined and sequentially asserted event sequence when pipelining is supported,,Test should fail a first triggered but interrupted event sequence,,Test should ignore a first triggered and simulataneously initiated event sequence when pipelining is not supported,,Test should fail on unknowns in event sequence,,Test should support weak high and low meta values,,Test should handle reversed and or offset expressions,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_sequence/"} lib.tb_check_sequence(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 641 ns  Iteration: 0  Instance: /tb_check_sequence
# ** Note: Number of assertions: 54
#    Time: 641 ns  Iteration: 0  Instance: /tb_check_sequence
# ** Note: Number of errors: 0
#    Time: 641 ns  Iteration: 0  Instance: /tb_check_sequence
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_stable/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_stable/modelsim/vsim.wlf {-g/tb_check_stable/runner_cfg="enabled_test_cases : Test concurrent checker should pass stable window,,Test concurrent checker should pass window with varying drive strength,,Test concurrent checker should handle weak start and end events,,Test concurrent checker should fail unstable window,,Test concurrent checker should fail window with weak changes to opposite level,,Test concurrent checker should fail on unknown start event,,Test concurrent checker should fail on unknown end event in active window,,Test concurrent checker should fail on stable unknown window,,Test concurrent checker should handle back to back windows,,Test concurrent checker should ignore second of two overlapping windows,,Test concurrent checker should test one cycle windows,,Test concurrent checker with std_logic_vector input should pass unstable window if not enabled,,Test concurrent checker with std_logic input should pass unstable window if not enabled,,Test should handle reversed and or offset expressions,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_stable/"} lib.tb_check_stable(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 2981 ns  Iteration: 0  Instance: /tb_check_stable
# ** Note: Number of assertions: 401
#    Time: 2981 ns  Iteration: 0  Instance: /tb_check_stable
# ** Note: Number of errors: 0
#    Time: 2981 ns  Iteration: 0  Instance: /tb_check_stable
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_true/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_true/modelsim/vsim.wlf {-g/tb_check_true/runner_cfg="enabled_test_cases : Test should pass on true and logic 1 inputs to sequential checks,,Test should fail on false and logic 0 inputs to sequential checks,,Test should be possible to use concurrently,,Test should be possible to use concurrently with negative active clock edge,,Test should be possible to use concurrently with custom checker,,Test should pass on weak high but fail on other meta values,,Test should pass on logic low inputs when not enabled,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_true/"} lib.tb_check_true(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 261 ns  Iteration: 0  Instance: /tb_check_true
# ** Note: Number of assertions: 80
#    Time: 261 ns  Iteration: 0  Instance: /tb_check_true
# ** Note: Number of errors: 0
#    Time: 261 ns  Iteration: 0  Instance: /tb_check_true
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_zero_one_hot/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L lib -L vunit_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_zero_one_hot/modelsim/vsim.wlf {-g/tb_check_zero_one_hot/runner_cfg="enabled_test_cases : Test should pass on zero or one high bit,,Test should fail on more than one high bit,,Test should fail on unknowns,,Test should be possible to use concurrently,,Test should be possible to use concurrently with negative active clock edge,,Test should be possible to use concurrently with custom checker,,Test should pass on unknowns when not enabled,,Test should handle reversed and or offset expressions,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/check/vunit_out/tests/lib.tb_check_zero_one_hot/"} lib.tb_check_zero_one_hot(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Note: 
# -----------
# Test result
# -----------
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_zero_one_hot
# ** Note: Number of assertions: 158
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_zero_one_hot
# ** Note: Number of errors: 0
#    Time: 331 ns  Iteration: 0  Instance: /tb_check_zero_one_hot
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -f -code 0
