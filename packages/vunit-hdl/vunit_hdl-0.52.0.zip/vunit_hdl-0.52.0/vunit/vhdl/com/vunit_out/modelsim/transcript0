#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com/modelsim/vsim.wlf {-g/tb_com/runner_cfg="enabled_test_cases : Test that named actors can be created,,Test that no name actors can be created,,Test that two actors of the same name cannot be created,,Test that a created actor can be found,,Test that an actor not created is found and its creation is deferred,,Test that deferred creation can be suppressed when an actor is not found,,Test that a created actor get the correct inbox size,,Test that a created actor can be destroyed,,Test that a non-existing actor cannot be destroyed,,Test that all actors can be destroyed,,Test that an actor can send a message to another actor,,Test that an actor can send a message in response to another message from an a priori unknown actor,,Test that an actor can send a message to itself,,Test that an actor can poll for incoming messages,,Test that sending to a non-existing actor results in an error code,,Test that an actor can send to an actor with deferred creation,,Test that receiving from an actor with deferred creation results in an error code,,Test that empty messages can be sent,,Test that an actor can publish messages to multiple subscribers,,Test that a subscriber can unsubscribe,,Test that a destroyed subscriber is not addressed by the publisher,,Test that an actor can only subscribe once to the same publisher,,Test that each message gets an increasing message number,,Test that a client can wait for a specific request reply from a server even if it is not the first message to arrive,,Test that a synchronous request can be made,,Test that a receiver is protected from flooding by creating a bounded inbox,,Test that publish skip sending messages to subscribers with full inboxes and that this can be detected,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com/"} 
# tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec/modelsim/vsim.wlf {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that integer can be encoded and decoded,,Test that real can be encoded and decoded,,Test that time can be encoded and decoded,,Test that boolean can be encoded and decoded,,Test that bit can be encoded and decoded,,Test that std_ulogic can be encoded and decoded,,Test that severity_level can be encoded and decoded,,Test that file_open_status can be encoded and decoded,,Test that file_open_kind can be encoded and decoded,,Test that character can be encoded and decoded,,Test that string can be encoded and decoded,,Test that boolean_vector can be encoded and decoded,,Test that bit_vector can be encoded and decoded,,Test that integer_vector can be encoded and decoded,,Test that real_vector can be encoded and decoded,,Test that time_vector can be encoded and decoded,,Test that std_ulogic_vector can be encoded and decoded,,Test that complex can be encoded and decoded,,Test that complex_polar can be encoded and decoded,,Test that unsigned from numeric_bit can be encoded and decoded,,Test that signed from numeric_bit can be encoded and decoded,,Test that unsigned from numeric_std can be encoded and decoded,,Test that signed from numeric_std can be encoded and decoded,,Test that ufixed can be encoded and decoded,,Test that sfixed can be encoded and decoded,,Test that float can be encoded and decoded,,Test that custom enumeration type can be encoded and decoded,,Test that custom record type can be encoded and decoded,,Test that custom array can be encoded and decoded,,Test that all provided codecs can be used within a composite,,Test that the values of different enumeration types used for msg_type record elements get different encodings,,Test that records with different msg_type 
# enumeration types can classified with a single get_msg_type function,,Test that records containing arrays can be encoded and decoded,active python runner : true,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec/"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -f -code 0
