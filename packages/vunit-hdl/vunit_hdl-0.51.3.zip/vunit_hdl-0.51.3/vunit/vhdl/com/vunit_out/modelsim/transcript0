#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ named\ actors\ can\ be\ created/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ named\ actors\ can\ be\ created/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that named actors can be created,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that named actors can be created/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ no\ name\ actors\ can\ be\ created/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ no\ name\ actors\ can\ be\ created/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that no name actors can be created,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that no name actors can be created/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ two\ actors\ of\ the\ same\ name\ cannot\ be\ created/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ two\ actors\ of\ the\ same\ name\ cannot\ be\ created/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that two actors of the same name cannot be created,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that two actors of the same name cannot be created/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ created\ actor\ can\ be\ found/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ created\ actor\ can\ be\ found/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that a created actor can be found,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that a created actor can be found/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ not\ created\ is\ found\ and\ its\ creation\ is\ deferred/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ not\ created\ is\ found\ and\ its\ creation\ is\ deferred/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that an actor not created is found and its creation is deferred,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that an actor not created is found and its creation is deferred/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ deferred\ creation\ can\ be\ suppressed\ when\ an\ actor\ is\ not\ found/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ deferred\ creation\ can\ be\ suppressed\ when\ an\ actor\ is\ not\ found/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that deferred creation can be suppressed when an actor is not found,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that deferred creation can be suppressed when an actor is not found/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ created\ actor\ get\ the\ correct\ inbox\ size/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ created\ actor\ get\ the\ correct\ inbox\ size/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that a created actor get the correct inbox size,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that a created actor get the correct inbox size/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ created\ actor\ can\ be\ destroyed/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ created\ actor\ can\ be\ destroyed/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that a created actor can be destroyed,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that a created actor can be destroyed/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ non-existing\ actor\ cannot\ be\ destroyed/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ non-existing\ actor\ cannot\ be\ destroyed/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that a non-existing actor cannot be destroyed,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that a non-existing actor cannot be destroyed/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ all\ actors\ can\ be\ destroyed/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ all\ actors\ can\ be\ destroyed/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that all actors can be destroyed,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that all actors can be destroyed/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ a\ message\ to\ another\ actor/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ a\ message\ to\ another\ actor/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that an actor can send a message to another actor,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that an actor can send a message to another actor/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ a\ message\ in\ response\ to\ another\ message\ from\ an\ a\ priori\ unknown\ actor/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ a\ message\ in\ response\ to\ another\ message\ from\ an\ a\ priori\ unknown\ actor/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that an actor can send a message in response to another message from an a priori unknown actor,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that an actor can send a message in response to another message from an a priori unknown actor/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ a\ message\ to\ itself/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ a\ message\ to\ itself/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that an actor can send a message to itself,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that an actor can send a message to itself/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ poll\ for\ incoming\ messages/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ poll\ for\ incoming\ messages/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that an actor can poll for incoming messages,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that an actor can poll for incoming messages/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ sending\ to\ a\ non-existing\ actor\ results\ in\ an\ error\ code/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ sending\ to\ a\ non-existing\ actor\ results\ in\ an\ error\ code/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that sending to a non-existing actor results in an error code,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that sending to a non-existing actor results in an error code/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ to\ an\ actor\ with\ deferred\ creation/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ send\ to\ an\ actor\ with\ deferred\ creation/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that an actor can send to an actor with deferred creation,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that an actor can send to an actor with deferred creation/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ receiving\ from\ an\ actor\ with\ deferred\ creation\ results\ in\ an\ error\ code/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ receiving\ from\ an\ actor\ with\ deferred\ creation\ results\ in\ an\ error\ code/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that receiving from an actor with deferred creation results in an error code,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that receiving from an actor with deferred creation results in an error code/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ empty\ messages\ can\ be\ sent/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ empty\ messages\ can\ be\ sent/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that empty messages can be sent,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that empty messages can be sent/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ publish\ messages\ to\ multiple\ subscribers/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ an\ actor\ can\ publish\ messages\ to\ multiple\ subscribers/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that an actor can publish messages to multiple subscribers,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that an actor can publish messages to multiple subscribers/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ subscriber\ can\ unsubscribe/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ subscriber\ can\ unsubscribe/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that a subscriber can unsubscribe,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that a subscriber can unsubscribe/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ destroyed\ subscriber\ is\ not\ addressed\ by\ the\ publisher/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ destroyed\ subscriber\ is\ not\ addressed\ by\ the\ publisher/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that a destroyed subscriber is not addressed by the publisher,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that a destroyed subscriber is not addressed by the publisher/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ client\ can\ wait\ for\ a\ specific\ request\ reply\ from\ a\ server\ even\ if\ it\ is\ not\ the\ first\ message\ to\ arrive/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test\ that\ a\ client\ can\ wait\ for\ a\ specific\ request\ reply\ from\ a\ server\ even\ if\ it\ is\ not\ the\ first\ message\ to\ arrive/modelsim/vsim.wlf} {-g/tb_com/runner_cfg="enabled_test_cases : Test that a client can wait for a specific request reply from a server even if it is not the first message to arrive,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com.Test that a client can wait for a specific request reply from a server even if it is not the first message to arrive/,active python runner : true"} tb_com_lib.tb_com(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ time\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ time\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that time can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that time can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ std_ulogic\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ std_ulogic\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that std_ulogic can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that std_ulogic can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ severity_level\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ severity_level\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that severity_level can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that severity_level can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ string\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ string\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that string can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that string can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ boolean_vector\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ boolean_vector\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that boolean_vector can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that boolean_vector can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ bit_vector\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ bit_vector\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that bit_vector can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that bit_vector can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# ** Warning: NUMERIC_BIT.TO_UNSIGNED: vector truncated
#    Time: 0 ps  Iteration: 4  Instance: /tb_com_codec
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ time_vector\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ time_vector\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that time_vector can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that time_vector can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# ** Failure: Failed opening d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that time_vector can be encoded and decoded/test_runner_trace.csv (mode_error).
#    Time: 0 ps  Iteration: 4  Process: /tb_com_codec/test_runner File: D:/Programming/github/vunit/vunit/vhdl/logging/src/log_special_types200x.vhd
# Break in Subprogram logger_t.log at D:/Programming/github/vunit/vunit/vhdl/logging/src/log_special_types200x.vhd line 278
# Stopped at D:/Programming/github/vunit/vunit/vhdl/logging/src/log_special_types200x.vhd line 278 
# 
# Stack trace result from 'tb' command 
#  D:/Programming/github/vunit/vunit/vhdl/logging/src/log_special_types200x.vhd 278 [address ff0a21ac] Subprogram logger_t.log
# called from  D:/Programming/github/vunit/vunit/vhdl/logging/src/log_base.vhd 41 [address ff0a55e5] Subprogram base_log
# called from  D:/Programming/github/vunit/vunit/vhdl/logging/src/log.vhd 107 [address ff0a67e6] Subprogram debug
# called from  D:/Programming/github/vunit/vunit/vhdl/run/src/run.vhd 192 [address ff140ad4] Subprogram test_suite
# called from  d:/Programming/github/vunit/vunit/vhdl/com/test/tb_com_codec.vhd 164 [address ff2b8c5c] Process test_runner
#  
# 
# Surrounding code from 'see' command 
#   273 :         write(l, format(cfg.log_file_format, msg,
#   274 :                            seq_num, cfg.log_separator, now,
#   275 :                            selected_level_name.all, line_num,
#   276 :                            file_name, selected_src.all));
#   277 :         file_open(status, log_file, cfg.log_file_name.all, append_mode);
# ->278 :         assert status = open_ok report "Failed opening " & cfg.log_file_name.all & " (" & file_open_status'image(status) & ")." severity failure;
#   279 :         writeline(log_file, l);
#   280 :         file_close(log_file);
#   281 :       end if;
#   282 :     end if;
#  
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 1 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ std_ulogic_vector\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ std_ulogic_vector\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that std_ulogic_vector can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that std_ulogic_vector can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ complex_polar\ can\ be\ encoded\ and\ decoded/modelsim/common.do
# Cannot open macro file: d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that complex_polar can be encoded and decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ std_ulogic_vector\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that std_ulogic_vector can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that std_ulogic_vector can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ unsigned\ from\ numeric_std\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ unsigned\ from\ numeric_std\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that unsigned from numeric_std can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that unsigned from numeric_std can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ float\ can\ be\ encoded\ and\ decoded/modelsim/common.do
# Cannot open macro file: d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that float can be encoded and decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ unsigned\ from\ numeric_std\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that unsigned from numeric_std can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that unsigned from numeric_std can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ custom\ record\ type\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ custom\ record\ type\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that custom record type can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that custom record type can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ custom\ array\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ custom\ array\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that custom array can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that custom array can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -sim
#VUNIT_RETURN
do d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ records\ containing\ arrays\ can\ be\ encoded\ and\ decoded/modelsim/common.do
#VUNIT_RETURN
quietly set failed [vunit_load]
# vsim -L vunit_lib -L tb_com_lib -modelsimini d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/modelsim/modelsim.ini -onfinish stop -quiet -t ps -wlf {d:/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test\ that\ records\ containing\ arrays\ can\ be\ encoded\ and\ decoded/modelsim/vsim.wlf} {-g/tb_com_codec/runner_cfg="enabled_test_cases : Test that records containing arrays can be encoded and decoded,output path : d::/Programming/github/vunit/vunit/vhdl/com/vunit_out/tests/tb_com_lib.tb_com_codec.Test that records containing arrays can be encoded and decoded/,active python runner : true"} tb_com_lib.tb_com_codec(test_fixture) 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quietly set failed [vunit_run]
# Break in Subprogram vunit_stop at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10
# Stopped at D:/Programming/github/vunit/vunit/vhdl/run/src/stop_body_2008.vhd line 10 
#VUNIT_RETURN
echo $failed #VUNIT_READVAR
# 0 #VUNIT_READVAR 
#VUNIT_RETURN
quit -f -code 0
