
/* #########################################################################
 * [2015-12-22 11:30:30.910000] THIS FILE IS AUTOGENERATED - DO NOT EDIT!
 * ######################################################################### */

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Tue Dec 22 11:30:30 2015. */

#ifndef PB__DROPBOT_DX__CONFIG_PB_H_INCLUDED
#define PB__DROPBOT_DX__CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _dropbot_dx_Config {
    bool has_serial_number;
    uint32_t serial_number;
    bool has_baud_rate;
    uint32_t baud_rate;
    bool has_i2c_address;
    uint32_t i2c_address;
    bool has_engaged_angle;
    uint32_t engaged_angle;
    bool has_disengaged_angle;
    uint32_t disengaged_angle;
    bool has_light_pin;
    uint32_t light_pin;
    bool has_servo_pin;
    uint32_t servo_pin;
    bool has_light_override_pin;
    uint32_t light_override_pin;
    bool has_light_override_enabled;
    bool light_override_enabled;
} dropbot_dx_Config;

typedef struct _dropbot_dx_State {
    bool has_magnet_engaged;
    bool magnet_engaged;
    bool has_light_enabled;
    bool light_enabled;
} dropbot_dx_State;

/* Default values for struct fields */
extern const uint32_t dropbot_dx_Config_baud_rate_default;
extern const uint32_t dropbot_dx_Config_engaged_angle_default;
extern const uint32_t dropbot_dx_Config_disengaged_angle_default;
extern const uint32_t dropbot_dx_Config_light_pin_default;
extern const uint32_t dropbot_dx_Config_servo_pin_default;
extern const uint32_t dropbot_dx_Config_light_override_pin_default;
extern const bool dropbot_dx_Config_light_override_enabled_default;
extern const bool dropbot_dx_State_magnet_engaged_default;
extern const bool dropbot_dx_State_light_enabled_default;

/* Initializer values for message structs */
#define dropbot_dx_Config_init_default           {false, 0, false, 115200u, false, 0, false, 75u, false, 103u, false, 8u, false, 7u, false, 6u, false, false}
#define dropbot_dx_State_init_default            {false, false, false, false}
#define dropbot_dx_Config_init_zero              {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define dropbot_dx_State_init_zero               {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define dropbot_dx_Config_serial_number_tag      1
#define dropbot_dx_Config_baud_rate_tag          2
#define dropbot_dx_Config_i2c_address_tag        3
#define dropbot_dx_Config_engaged_angle_tag      50
#define dropbot_dx_Config_disengaged_angle_tag   51
#define dropbot_dx_Config_light_pin_tag          52
#define dropbot_dx_Config_servo_pin_tag          53
#define dropbot_dx_Config_light_override_pin_tag 54
#define dropbot_dx_Config_light_override_enabled_tag 55
#define dropbot_dx_State_magnet_engaged_tag      1
#define dropbot_dx_State_light_enabled_tag       2

/* Struct field encoding specification for nanopb */
extern const pb_field_t dropbot_dx_Config_fields[10];
extern const pb_field_t dropbot_dx_State_fields[3];

/* Maximum encoded size of messages (where known) */
#define dropbot_dx_Config_size                   56
#define dropbot_dx_State_size                    4

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
