---
# fittings to be deployed, managed, and destroyed in the cloud infrastructure of Dimension Data

# in safe mode no change is actually made on the infrastructure
safeMode: False

#
polishers:
  - ansible:
      reap: gigafox_ansible.yaml
  - inventory:
      reap: gigafox_inventory.yaml
  - rub:
      key: ~/.ssh/id_rsa.pub
      reap: gigafox_rubs.yaml

# each facility is described separately
---
# Ashburn - primary site in USA
locationId: NA9
regionId: dd-na

rub:
  - beachhead: 10.10.10.9
  - beachhead: 10.10.10.10

basement: beachhead

blueprints:

  # root resources
  - beachhead:
      domain: &domain
        name: Gigafox
        description: '#us #primary'
        service: advanced
        ipv4: 6
      ethernet: &control
        name: gigafox.control
        description: '#ops'
        subnet: 10.0.0.0
        destroy: never
      nodes:
        - beachhead:
            description: '#beachhead #us #ops'
            glue:
              - internet 22
            running: always
            monitoring: essentials

  # management, administration, and monitoring
  - control:
      domain: *domain
      ethernet: *control
      nodes:
        - stackstorm:
            description: '#stackstorm #us #ops'
            glue:
              - internet 22 80 443
            running: always
            monitoring: essentials
        - zabbix:
            description: '#dashboard #us #ops'
            appliance: 'RedHat 6 64-bit 2 CPU'
            monitoring: essentials
        - scom:
            description: 'Microsoft System Center Operation Manager #scom #us #ops'
            appliance: 'Win2012 R2 Std 4 CPU'
            monitoring: essentials

  # workloads dedicated to source code and related
  - source:
      domain: *domain
      ethernet:
        name: gigafox.source
        description: '#us #dev'
        subnet: 10.1.0.0
        destroy: never
      nodes:
        - gitlab:
            description: '#gitlab #us #dev'
            glue:
              - internet 80 443
              - gigafox.control
            monitoring: essentials

  # workloads dealing directly with end-user devices
  - web:
      domain: *domain
      ethernet: &bastion
        name: gigafox.web
        description: '#us #ops'
        subnet: 10.2.0.0
        accept:
          - gigafox.control
        destroy: never
      nodes:
        - web[1..2]_na9:
            description: '#apache #us #ops #primary'
#            cpu: 4
#            memory: 8
#            disks:
#              - 500 STANDARD
#              - 100 HIGHPERFORMANCE
            glue:
              - internet 22 80 443
            monitoring: essentials
            rub:
              - put rub.puppet.apache.pp /root/apache.pp
              - run rub.puppet.apache.sh /root/apache.pp
      balancer:
        port: 80
        protocol: http

  # workloads dealing with short-term memory
  - memcache:
      domain: *domain
      ethernet: *bastion
      nodes:
        - redis[1..2]_na9:
            description: '#redis #us #ops #primary'
            monitoring: essentials

  # docker resources
  - docker:
      domain: *domain
      ethernet: &compute
        name: gigafox.compute
        description: '#us'
        subnet: 10.3.0.0
        accept:
          - gigafox.web
        destroy: never
      nodes:
        - docker[1..5]_na9:
            description: '#docker #us #dev #ops #primary'
            glue:
              - gigafox.control
            monitoring: essentials
            rub:
              - run rub.update.sh
              - run rub.docker.sh

  # nodejs resources
  - nodejs:
      domain: *domain
      ethernet: *compute
      nodes:
        - nodejs[1..5]_na9:
            description: '#nodejs #us #ops #primary'
            glue:
              - gigafox.control
            monitoring: essentials
            rub:
              - run rub.update.sh

  # workloads dedicated to data records
  - sql:
      domain: *domain
      ethernet: &data
        name: data
        description: '#us'
        subnet: 10.4.0.0
        accept:
          - gigafox.control
          - gigafox.compute
        destroy: never
      nodes:
        - masterSQL_na9:
            description: '#mysql #us #ops #primary'
            appliance: 'RedHat 6 64-bit 4 CPU'
            monitoring: advanced

  # workloads dedicated to big data
  - cassandra:
      domain: *domain
      ethernet: *data
      nodes:
        - cassandra[1..3]_na9:
            description: '#cassandra #us #ops #primary'
            monitoring: essentials

  # workloads dedicated to BLOBs
  - mongodb:
      domain: *domain
      ethernet: *data
      nodes:
        - mongodb[1..7]_na9:
            description: '#mongodb #us #ops #primary'
            monitoring: essentials

  # workloads devoted to object-based storage
  - s3:
      domain: *domain
      ethernet: *data
      nodes:
        - ceph[1..5]_na9:
            description: '#ceph #us #ops #primary'
            monitoring: essentials

---
# Santa Clara - secondary site in USA
locationId: NA12
regionId: dd-na

blueprints:

  # workloads dealing directly with end-user devices
  - web:
      domain: &domain
        name: Gigafox
        description: '#us #secondary'
        service: advanced
        ipv4: 4
      ethernet: &bastion
        name: gigafox.web
        description: '#us #ops'
        subnet: 10.2.0.0
        accept:
          - NA9::gigafox.control
        destroy: never
      nodes:
        - web[1..2]_na12:
            description: '#apache #us #ops #secondary'
#            cpu: 4
#            memory: 8
#            disks:
#              - 500 STANDARD
#              - 100 HIGHPERFORMANCE
            monitoring: essentials
            rub:
              - put rub.puppet.apache.pp /root/apache.pp
              - run rub.puppet.apache.sh /root/apache.pp
      balancer:
        port: 80
        protocol: http

  # workloads dealing with short-term memory
  - memcache:
      domain: *domain
      ethernet: *bastion
      nodes:
        - redis[1..2]_na12:
            description: '#redis #us #ops #secondary'
            monitoring: essentials

  # docker resources
  - docker:
      domain: *domain
      ethernet: &compute
        name: gigafox.compute
        description: '#us'
        subnet: 10.3.0.0
        accept:
          - NA9::gigafox.control
        destroy: never
      nodes:
        - docker[1..5]_na12:
            description: '#docker #us #dev #ops #secondary'
            monitoring: essentials
            rub:
              - run rub.update.sh
              - run rub.docker.sh

  # nodejs resources
  - nodejs:
      domain: *domain
      ethernet: *compute
      nodes:
        - nodejs[1..5]_na12:
            description: '#nodejs #us #ops #secondary'
            monitoring: essentials
            rub:
              - run rub.update.sh

  # workloads dedicated to data records
  - sql:
      domain: *domain
      ethernet: &data
        name: data
        description: '#us'
        subnet: 10.4.0.0
        accept:
          - NA9::gigafox.control
        destroy: never
      nodes:
        - slaveSQL_na12:
            description: '#mysql #us #ops #secondary'
            appliance: 'RedHat 6 64-bit 4 CPU'
            monitoring: advanced

  # workloads dedicated to big data
  - cassandra:
      domain: *domain
      ethernet: *data
      nodes:
        - cassandra[1..3]_na12:
            description: '#cassandra #us #ops #secondary'
            monitoring: essentials

  # workloads dedicated to BLOBs
  - mongodb:
      domain: *domain
      ethernet: *data
      nodes:
        - mongodb[1..7]_na12:
            description: '#mongodb #us #ops #secondary'
            monitoring: essentials

  # workloads devoted to object-based storage
  - s3:
      domain: *domain
      ethernet: *data
      nodes:
        - ceph[1..5]_na12:
            description: '#ceph #us #ops #secondary'
            monitoring: essentials
