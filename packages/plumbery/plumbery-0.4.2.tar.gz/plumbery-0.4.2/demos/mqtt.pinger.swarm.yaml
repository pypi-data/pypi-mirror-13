---
safeMode: false

information:
  - "These fittings plan are aiming to deploy multiple pingers connected"
  - "to a MQTT server and to a Kibana dashboard"
  - "Project credits:"
  - "Swarming project from Mathieu Lecarme: https://github.com/athoune/swarming"

cloud-config: # default for all nodes created by plumbery

  ssh_keys: # generated randomly, and used on subsequent invocations
    rsa_private: |
      {{ key.rsa_private }}
    rsa_public: "{{ key.rsa_public }}"

  users:
    - default

    - name: ubuntu
      sudo: 'ALL=(ALL) NOPASSWD:ALL'
      ssh-authorized-keys:
        - "{{ key.rsa_public }}"
        - "{{ local.rsa_public }}"

    - name: root
      ssh-authorized-keys:
        - "{{ key.rsa_public }}"
        - "{{ local.rsa_public }}"

  disable_root: false

  ssh_pwauth: false

---
locationId: AU10
regionId: dd-au

blueprints:

  - queen:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: PingerSwarmNetwork
        subnet: 10.0.0.0
        accept:
          - dd-ap::AP3::SwarmNetworkAP3
          - dd-ap::AP4::SwarmNetworkAP4
          - dd-ap::AP5::SwarmNetworkAP5
          - dd-ap::AU11::SwarmNetworkAU11
          - dd-eu::EU6::SwarmNetworkEU6
          - dd-eu::EU8::SwarmNetworkEU8
          - dd-na::NA9::SwarmNetworkNA9
          - dd-na::NA12::SwarmNetworkNA12

      nodes:

        - queen: # the MQTT server

            description: "#swarm #queen #mqtt #ubuntu"

            information:
              - "a MQTT broker to control a swarm of pingers"
              - "$ ssh ubuntu@{{ node.public }}"
              - "change target addresses with something like the following:"
              - '$ mosquitto_pub -t watch -m "free.fr yahoo.fr yahoo.cn" -q 1'
              - "check the flow of pings with:"
              - '$ mosquitto_sub -t "ping/+" -v'

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              apt_sources:
                - source: "ppa:mosquitto-dev/mosquitto-ppa"

              packages:
                - ntp
                - mosquitto
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ queen.ipv6 }}/ {next}
                    /^{{ dashboard.ipv6 }}/ {next}
                    /^{{ dd-na::NA9::bee-NA9.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ queen.ipv6 }}    queen"
                     print "{{ dashboard.ipv6 }}    dashboard"
                     print "{{ dd-na::NA9::bee-NA9.ipv6 }}    bee-NA9"
                    }

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt


        - dashboard: # the Kibana and Elasticsearch engine

            description: "#swarm #dashboard #kibana #ubuntu"

            information:
              - "a web dashboard to visualize pings:"
              - "http://{{ dashboard.public }}"
              - "authenticate with 'dashboard' and '{{ dashboard.secret }}'"
              - "troubleshoot with:"
              - "$ ssh ubuntu@{{ node.public }}"
              - "check the feeding of elasticsearch with:"
              - "$ curl 'http://localhost:9200/_cat/indices?v'"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22 80

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              bootcmd:

                # remove apache
                - apt-get remove apache2 -y
                - apt-get autoremove -y

                # automate acceptance of oracle licence
                - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
                - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 seen true" | sudo debconf-set-selections

              apt_sources:
                - source: "ppa:mosquitto-dev/mosquitto-ppa"
                - source: "ppa:webupd8team/java"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - oracle-java8-installer
                - python-pip
                - nginx
                - apache2-utils

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ queen.ipv6 }}/ {next}
                    /^{{ dashboard.ipv6 }}/ {next}
                    /^{{ dd-na::NA9::bee-NA9.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ queen.ipv6 }}    queen"
                     print "{{ dashboard.ipv6 }}    dashboard"
                     print "{{ dd-na::NA9::bee-NA9.ipv6 }}    bee-NA9"
                    }

                - path: /etc/nginx/sites-available/default.swarm
                  content: |
                    server {
                        listen 80;

                        server_name {{ node.public }};

                        auth_basic "Restricted Access";
                        auth_basic_user_file /etc/nginx/htpasswd.users;

                        location / {
                            proxy_pass http://localhost:5601;
                            proxy_http_version 1.1;
                            proxy_set_header Upgrade $http_upgrade;
                            proxy_set_header Connection 'upgrade';
                            proxy_set_header Host $host;
                            proxy_cache_bypass $http_upgrade;
                        }
                    }

                - path: /etc/init/swarm-indexer.conf
                  content: |
                    description "Swarm indexer"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/indexer.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing Elasticsearch, Kibana"
                - cd /root
                - wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
                - echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
                - echo "deb http://packages.elastic.co/kibana/4.4/debian stable main" | sudo tee -a /etc/apt/sources.list.d/kibana-4.4.x.list
                - apt-get update
                - apt-get install elasticsearch kibana
                - update-rc.d elasticsearch defaults 95 10
                - service elasticsearch start
                - update-rc.d kibana defaults 96 9
                - service kibana start

                - echo "===== Securing web access"
                - cp -n /etc/nginx/sites-available/default /etc/nginx/sites-available/default.original
                - cp /etc/nginx/sites-available/default.swarm /etc/nginx/sites-available/default
                - htpasswd -cb /etc/nginx/htpasswd.users dashboard {{ dashboard.secret }}
                - service nginx restart

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-indexer restart

  - bees:

      domain: *domain
      ethernet: *ethernet
      nodes:

        - bee-AU10:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: AP3
regionId: dd-ap

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkAP3
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-AP3:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: AP4
regionId: dd-ap

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkAP4
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-AP4:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: AP5
regionId: dd-ap

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkAP5
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-AP5:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: AU11
regionId: dd-au

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkAU11
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-AU11:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: EU6
regionId: dd-eu

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkEU6
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-EU6:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: EU8
regionId: dd-eu

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkEU8
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-EU8:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: NA9
regionId: dd-na

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkNA9
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-NA9:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

---
locationId: NA12
regionId: dd-na

blueprints:

  - bees:

      domain: &domain
        name: PingerSwarmFox
        description: "Demonstration of MQTT with multiple pingers"
        ipv4: auto

      ethernet: &ethernet
        name: SwarmNetworkNA12
        subnet: 10.0.0.0
        accept:
          - dd-au::AU10::PingerSwarmNetwork

      nodes:

        - bee-NA12:

            description: "#swarm #bee #mqtt #ubuntu"

            information:
              - "a pinger controlled via MQTT"

            appliance: 'Ubuntu 14'

            cpu: 2
            memory: 3

            glue:
              - internet 22

            monitoring: essentials

            cloud-config:

              hostname: "{{ node.name }}"

              packages:
                - ntp
                - mosquitto-clients
                - git
                - python-pip

              write_files:

                - path: /root/hosts.awk
                  content: |
                    #!/usr/bin/awk -f
                    /^{{ node.private }}/ {next}
                    /^{{ node.ipv6 }}/ {next}
                    /^{{ dd-au::AU10::queen.ipv6 }}/ {next}
                    {print}
                    END {
                     print "{{ node.private }}    {{ node.name }}"
                     print "{{ node.ipv6 }}    {{ node.name }}"
                     print "{{ dd-au::AU10::queen.ipv6 }}    queen"
                    }

                - path: /etc/init/swarm-pinger.conf
                  content: |
                    description "Swarm pinger"
                    start on runlevel [2345]
                    stop on runlevel [!2345]
                    start on startup
                    exec /home/ubuntu/swarming/swarming.py queen

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Updating /etc/hosts"
                - cp -n /etc/hosts /etc/hosts.original
                - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

                - echo "===== Installing swarming software"
                - cd /home/ubuntu
                - git clone https://github.com/bernard357/swarming.git
                - cd swarming
                - pip install -r requirements.txt

                - echo "===== Running swarming software"
                - service swarm-pinger start

