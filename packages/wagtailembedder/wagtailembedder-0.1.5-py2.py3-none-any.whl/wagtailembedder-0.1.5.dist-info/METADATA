Metadata-Version: 2.0
Name: wagtailembedder
Version: 0.1.5
Summary: Snippets embedder for Wagtail RichTextField.
Home-page: https://github.com/springload/wagtailembedder/
Author: Jordi J. Tablada
Author-email: jordi@springload.co.nz
License: BSD License
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content

wagtailembedder
==================

![Wagtailembedder scnreenshot](http://i.imgur.com/qDPKz7r.png)

Snippets embedder for Wagtail RichTextField.

# Quickstart

``` $ pip install wagtailembedder```

add wagtailembedder to your settings.py in the INSTALLED_APPS section:

```
...
    'modelcluster',
    'wagtailembedder',
    'core',
...
```

For each of your models registered as a wagtail.wagtailsnippets create an html file to render the template inside a RichText field.
Example: if we have a ```SocialMediaLink``` snippet in our ```core``` app we need to create a template in ```core/templates/snippets/social_media_link.html```. The variable containing the snippet instance in the template is ```snippet```.

If no template is defined then an exception will be raised in the frontend when rendering a RichTextField with the embedded snippet in it. Make sure you write some templates for your snippets before start to embedding them.

Templates names will match snippets models names replacing capital letters with underscores, Wagtail style.



