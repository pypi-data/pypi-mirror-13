# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class GetBanknoteResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        GetBanknoteResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'payee_member_id': 'str',
            'created': 'str',
            'redeemed': 'str',
            'amount': 'Money',
            'state': 'str'
        }

        self.attribute_map = {
            'payee_member_id': 'payeeMemberId',
            'created': 'created',
            'redeemed': 'redeemed',
            'amount': 'amount',
            'state': 'state'
        }

        self._payee_member_id = None
        self._created = None
        self._redeemed = None
        self._amount = None
        self._state = None

    @property
    def payee_member_id(self):
        """
        Gets the payee_member_id of this GetBanknoteResponse.


        :return: The payee_member_id of this GetBanknoteResponse.
        :rtype: str
        """
        return self._payee_member_id

    @payee_member_id.setter
    def payee_member_id(self, payee_member_id):
        """
        Sets the payee_member_id of this GetBanknoteResponse.


        :param payee_member_id: The payee_member_id of this GetBanknoteResponse.
        :type: str
        """
        self._payee_member_id = payee_member_id

    @property
    def created(self):
        """
        Gets the created of this GetBanknoteResponse.


        :return: The created of this GetBanknoteResponse.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this GetBanknoteResponse.


        :param created: The created of this GetBanknoteResponse.
        :type: str
        """
        self._created = created

    @property
    def redeemed(self):
        """
        Gets the redeemed of this GetBanknoteResponse.


        :return: The redeemed of this GetBanknoteResponse.
        :rtype: str
        """
        return self._redeemed

    @redeemed.setter
    def redeemed(self, redeemed):
        """
        Sets the redeemed of this GetBanknoteResponse.


        :param redeemed: The redeemed of this GetBanknoteResponse.
        :type: str
        """
        self._redeemed = redeemed

    @property
    def amount(self):
        """
        Gets the amount of this GetBanknoteResponse.


        :return: The amount of this GetBanknoteResponse.
        :rtype: Money
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """
        Sets the amount of this GetBanknoteResponse.


        :param amount: The amount of this GetBanknoteResponse.
        :type: Money
        """
        self._amount = amount

    @property
    def state(self):
        """
        Gets the state of this GetBanknoteResponse.


        :return: The state of this GetBanknoteResponse.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """
        Sets the state of this GetBanknoteResponse.


        :param state: The state of this GetBanknoteResponse.
        :type: str
        """
        self._state = state

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
