# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class GetPaymentResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        GetPaymentResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'account_id': 'str',
            'payee_member_id': 'str',
            'banknote_id': 'str',
            'debit_id': 'str',
            'created': 'str',
            'amount': 'Money',
            'description': 'str'
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'payee_member_id': 'payeeMemberId',
            'banknote_id': 'banknoteId',
            'debit_id': 'debitId',
            'created': 'created',
            'amount': 'amount',
            'description': 'description'
        }

        self._account_id = None
        self._payee_member_id = None
        self._banknote_id = None
        self._debit_id = None
        self._created = None
        self._amount = None
        self._description = None

    @property
    def account_id(self):
        """
        Gets the account_id of this GetPaymentResponse.


        :return: The account_id of this GetPaymentResponse.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """
        Sets the account_id of this GetPaymentResponse.


        :param account_id: The account_id of this GetPaymentResponse.
        :type: str
        """
        self._account_id = account_id

    @property
    def payee_member_id(self):
        """
        Gets the payee_member_id of this GetPaymentResponse.


        :return: The payee_member_id of this GetPaymentResponse.
        :rtype: str
        """
        return self._payee_member_id

    @payee_member_id.setter
    def payee_member_id(self, payee_member_id):
        """
        Sets the payee_member_id of this GetPaymentResponse.


        :param payee_member_id: The payee_member_id of this GetPaymentResponse.
        :type: str
        """
        self._payee_member_id = payee_member_id

    @property
    def banknote_id(self):
        """
        Gets the banknote_id of this GetPaymentResponse.


        :return: The banknote_id of this GetPaymentResponse.
        :rtype: str
        """
        return self._banknote_id

    @banknote_id.setter
    def banknote_id(self, banknote_id):
        """
        Sets the banknote_id of this GetPaymentResponse.


        :param banknote_id: The banknote_id of this GetPaymentResponse.
        :type: str
        """
        self._banknote_id = banknote_id

    @property
    def debit_id(self):
        """
        Gets the debit_id of this GetPaymentResponse.


        :return: The debit_id of this GetPaymentResponse.
        :rtype: str
        """
        return self._debit_id

    @debit_id.setter
    def debit_id(self, debit_id):
        """
        Sets the debit_id of this GetPaymentResponse.


        :param debit_id: The debit_id of this GetPaymentResponse.
        :type: str
        """
        self._debit_id = debit_id

    @property
    def created(self):
        """
        Gets the created of this GetPaymentResponse.


        :return: The created of this GetPaymentResponse.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this GetPaymentResponse.


        :param created: The created of this GetPaymentResponse.
        :type: str
        """
        self._created = created

    @property
    def amount(self):
        """
        Gets the amount of this GetPaymentResponse.


        :return: The amount of this GetPaymentResponse.
        :rtype: Money
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """
        Sets the amount of this GetPaymentResponse.


        :param amount: The amount of this GetPaymentResponse.
        :type: Money
        """
        self._amount = amount

    @property
    def description(self):
        """
        Gets the description of this GetPaymentResponse.


        :return: The description of this GetPaymentResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this GetPaymentResponse.


        :param description: The description of this GetPaymentResponse.
        :type: str
        """
        self._description = description

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
