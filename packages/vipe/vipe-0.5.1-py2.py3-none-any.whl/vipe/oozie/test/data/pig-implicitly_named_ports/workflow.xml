<workflow-app xmlns="uri:oozie:workflow:0.2" name="test-core_examples_pig_basic">
	<start to="producer" />
	<action name="producer">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/producer" />
				<mkdir path="${nameNode}${workingDir}/producer" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queueName}</value>
				</property>
			</configuration>
			<main-class>eu.dnetlib.iis.core.java.ProcessWrapper</main-class>
			<arg>eu.dnetlib.iis.core.examples.java.TextDataProducer</arg>
			<!-- All input and output ports have to be bound to paths in HDFS, working 
				directory has to be specified as well -->
			<arg>-Operson=${workingDir}/producer/person.csv</arg>
			<arg>-Odocument=${workingDir}/producer/doc.csv</arg>
		</java>
		<ok to="pig_node" />
		<error to="fail" />
	</action>
	<action name="pig_node">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<!-- The data generated by this node is deleted in this section -->
			<prepare>
				<delete path="${nameNode}${workingDir}/pig_node" />
				<mkdir path="${nameNode}${workingDir}/pig_node" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queueName}</value>
				</property>
			</configuration>
			<script>script.pig</script>
            <param>input=${workingDir}/producer/person.csv</param>
            <param>output=${workingDir}/pig_node/person_id</param>
		</pig>
		<ok to="consumer" />
		<error to="fail" />
	</action>
	
	<action name="consumer">
        <java>
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <main-class>eu.dnetlib.iis.core.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.core.java.jsonworkflownodes.TestingConsumer</arg>
            <arg>-C{data,
                eu.dnetlib.iis.statistics.schemas.PersonId,
                eu/dnetlib/iis/core/examples/pig/data/person_id.json}
            </arg>
            <arg>-Idata=${workingDir}/pig_node/person_id</arg>
        </java>
        <ok to="end" />
        <error to="fail" />
    </action>
	
	<kill name="fail">
		<message>Unfortunately, the workflow failed -- error message:
			[${wf:errorMessage(wf:lastErrorNode())}]
		</message>
	</kill>
	<end name="end" />
</workflow-app>
