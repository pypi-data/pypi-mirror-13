Metadata-Version: 1.1
Name: pyDAPAccess
Version: 0.1.4
Summary: CMSIS-DAP debugger access for Python
Home-page: https://github.com/mbedmicro/pyDAPAccess
Author: Martin Kojtal, Russ Butler
Author-email: martin.kojtal@arm.com, russ.butler@arm.com
License: Apache 2.0
Description: pyDAPAccess
        ===========
        
        pyDAPAccess is an Open Source python 2.7 library for communicating with 
        ARM Cortex-M microcontrollers through `CMSIS-DAP <https://github.com/ARMmbed/CMSIS-DAP>`__
        over USB. Currently Linux, OSX, and Windows are supported.
        
        | For more information on CMSIS-DAP you can find the official standard:
        | https://silver.arm.com/browse/CMSISDAP
        
        Installation
        ------------
        
        No user installation of this library is necessary.  Tools which rely on pyDAPAccess
        must specify it as a dependency.  This will cause pip to install it automatically
        as soon as something depends on it.
        
        One case where pyDAPAccess will need to be installed manually is when 
        doing development.  Installation can be done with pip using the following
        command:
        
        .. code:: shell
        
            $ pip install pydaplink
        
        | Note that you may run into permissions issues running this command.
        | You have a few options here:
        
        #. Run with ``sudo -H`` to install pyDAPAccess and dependencies globally
        #. Specify the ``--user`` option to install local to your user
        #. Run the command in a `virtualenv <https://virtualenv.pypa.io/en/latest/>`__ 
           local to a specific project working set.
        
        Development Setup
        -----------------
        
        pyDAPAccess developers are recommended to setup a working environment using
        `virtualenv <https://virtualenv.pypa.io/en/latest/>`__. After cloning
        the code, you can setup a virtualenv and install the pyDAPAccess
        dependencies for the current platform by doing the following:
        
        .. code:: console
        
            $ virtualenv env
            $ source env/bin/activate
            $ pip install -r dev-requirements.txt
        
        On Windows, the virtualenv would be activated by executing
        ``env\Scripts\activate``.
        
        Examples
        --------
        
        | For examples you can look into pyDAPAccess's usage in pyOCD:
        | https://github.com/mbedmicro/pyOCD
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
