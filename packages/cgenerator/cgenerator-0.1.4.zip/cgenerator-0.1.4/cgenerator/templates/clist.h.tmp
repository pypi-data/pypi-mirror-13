
#ifndef CLIST_<%name_upper%>_H
#define	CLIST_<%name_upper%>_H

#ifdef	__cplusplus
extern "C" {
#endif
    #include "ctypes.h"
	#include "entity_<%name_prefix%>.h"

    struct list_item_<%name_prefix%>
    {
        struct list_item_<%name_prefix%>* next;
        struct list_item_<%name_prefix%>* prev;
        <%name%>      data;
    };
    
    
    struct clist_<%name_prefix%>
    {      
        struct list_item_<%name_prefix%> *head;
        struct list_item_<%name_prefix%> *tail;
        uint			length;
    };

    struct clist_<%name_prefix%>* clist_<%name_prefix%>_allocate();
    void clist_<%name_prefix%>_free(struct clist_<%name_prefix%>** list);
    
    void clist_<%name_prefix%>_clear(struct clist_<%name_prefix%>* list);
    
    void clist_<%name_prefix%>_set(struct clist_<%name_prefix%>* list, uint index, const <%name%>* element);
    void clist_<%name_prefix%>_get(struct clist_<%name_prefix%>* list, uint index, <%name%>* element);
    
    void clist_<%name_prefix%>_delete(struct clist_<%name_prefix%>* list, uint index);
    void clist_<%name_prefix%>_insert(struct clist_<%name_prefix%>* list, uint index, const <%name%>* element);
    
    void clist_<%name_prefix%>_back(struct clist_<%name_prefix%>* list, <%name%>* element);
    void clist_<%name_prefix%>_front(struct clist_<%name_prefix%>* list, <%name%>* element);
    
    uint clist_<%name_prefix%>_length(const struct clist_<%name_prefix%>* list);


#ifdef	__cplusplus
}
#endif

#endif	/* CLIST_<%name_upper%>_H */

