
/* #########################################################################
 * [2015-12-23 16:20:38.475000] THIS FILE IS AUTOGENERATED - DO NOT EDIT!
 * ######################################################################### */

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Wed Dec 23 16:20:38 2015. */

#ifndef PB__PULSE_COUNTER_RPC__CONFIG_PB_H_INCLUDED
#define PB__PULSE_COUNTER_RPC__CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _pulse_counter_rpc_Config {
    bool has_serial_number;
    uint32_t serial_number;
    bool has_baud_rate;
    uint32_t baud_rate;
    bool has_i2c_address;
    uint32_t i2c_address;
    bool has_mux_channel_a_pin;
    uint32_t mux_channel_a_pin;
    bool has_mux_channel_b_pin;
    uint32_t mux_channel_b_pin;
} pulse_counter_rpc_Config;

typedef struct _pulse_counter_rpc_State {
    bool has_pulse_pin;
    int32_t pulse_pin;
    bool has_pulse_channel;
    uint32_t pulse_channel;
    bool has_pulse_direction;
    uint32_t pulse_direction;
    bool has_pulse_count_enable;
    bool pulse_count_enable;
    bool has_pulse_count;
    uint32_t pulse_count;
} pulse_counter_rpc_State;

/* Default values for struct fields */
extern const uint32_t pulse_counter_rpc_Config_baud_rate_default;
extern const uint32_t pulse_counter_rpc_Config_mux_channel_a_pin_default;
extern const uint32_t pulse_counter_rpc_Config_mux_channel_b_pin_default;
extern const int32_t pulse_counter_rpc_State_pulse_pin_default;
extern const uint32_t pulse_counter_rpc_State_pulse_channel_default;
extern const uint32_t pulse_counter_rpc_State_pulse_direction_default;
extern const bool pulse_counter_rpc_State_pulse_count_enable_default;
extern const uint32_t pulse_counter_rpc_State_pulse_count_default;

/* Initializer values for message structs */
#define pulse_counter_rpc_Config_init_default    {false, 0, false, 115200u, false, 0, false, 4u, false, 8u}
#define pulse_counter_rpc_State_init_default     {false, -1, false, 0u, false, 3u, false, false, false, 0u}
#define pulse_counter_rpc_Config_init_zero       {false, 0, false, 0, false, 0, false, 0, false, 0}
#define pulse_counter_rpc_State_init_zero        {false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pulse_counter_rpc_Config_serial_number_tag 1
#define pulse_counter_rpc_Config_baud_rate_tag   2
#define pulse_counter_rpc_Config_i2c_address_tag 3
#define pulse_counter_rpc_Config_mux_channel_a_pin_tag 4
#define pulse_counter_rpc_Config_mux_channel_b_pin_tag 5
#define pulse_counter_rpc_State_pulse_pin_tag    1
#define pulse_counter_rpc_State_pulse_channel_tag 2
#define pulse_counter_rpc_State_pulse_direction_tag 3
#define pulse_counter_rpc_State_pulse_count_enable_tag 4
#define pulse_counter_rpc_State_pulse_count_tag  5

/* Struct field encoding specification for nanopb */
extern const pb_field_t pulse_counter_rpc_Config_fields[6];
extern const pb_field_t pulse_counter_rpc_State_fields[6];

/* Maximum encoded size of messages (where known) */
#define pulse_counter_rpc_Config_size            30
#define pulse_counter_rpc_State_size             31

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
