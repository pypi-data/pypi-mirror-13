# This file exists so you can easily regenerate your project.
#
# `cookiepatcher` is a convenient shim around `cookiecutter`
# for regenerating projects (it will generate a .cookiecutterrc 
# automatically for any template). To use it:
#
#    pip install cookiepatcher
#    cookiepatcher gh:ionelmc/cookiecutter-pylibrary project-path
#
# See:
#    https://pypi.python.org/pypi/cookiecutter
#
# Alternatively, you can run:
#
#    cookiecutter --overwrite-if-exists --config-file=project-path/.cookiecutterrc gh:ionelmc/cookiecutter-pylibrary

default_context:

    appveyor:                  'yes'
    c_extension_cython:        'no'
    c_extension_optional:      'no'
    c_extension_support:       'no'
    codacy:                    'yes'
    codeclimate:               'yes'
    codecov:                   'yes'
    command_line_interface:    'click'
    command_line_interface_bin_name: 'challenge-me'
    coveralls:                 'no'
    distribution_name:         'challenge-me'
    email:                     'github@jlhj.de'
    full_name:                 'Julien Hadley Jack'
    github_username:           'julien-hadleyjack'
    landscape:                 'no'
    package_name:              'challenge_me'
    project_name:              'Challenge-Me'
    project_short_description: 'A command line tool for running programming challenges.'
    release_date:              'today'
    repo_name:                 'challenge-me'
    requiresio:                'yes'
    scrutinizer:               'yes'
    sphinx_doctest:            'no'
    sphinx_theme:              'readthedocs'
    test_matrix_configurator:  'yes'
    test_matrix_separate_coverage: 'no'
    test_runner:               'nose'
    travis:                    'yes'
    version:                   '0.1.0'
    website:                   'https://hadleyjack.de'
    year:                      'now'
