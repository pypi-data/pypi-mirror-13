---

title: Remove duplicates from linked list
source: Cracking The Coding Interview by Gayle Laakman
description: |
  Write code to remove duplicates from an unsorted linked list.
  How would you solve this problem if a temporary buffer is not allowed?
tests:
  - {input: 2 3 4 9 78 5 2 5 3, output: 2 3 4 9 78 5}
  - {input: 5, output: 5}
  - {input: 5 5 5 5 5 5 5 5 5, output: 5}

---

title: Find node in linked list
source: Cracking The Coding Interview by Gayle Laakman
description: Implement an algorithm to find the nth to last element of a singly linked list.
tests:
  - {input: 2 2 3 4 9 78 5 2 5 3, output: 2}
  - {input: 0 2 3 4 9 78 5 2 5 3, output: 3}
  - {input: 0 5, output: 5}
  - {input: 1 5, output: ""}

---

title: Delete middle node
source: Cracking The Coding Interview by Gayle Laakman
description: |
  Implement an algorithm to delete a node in the middle of a single linked list, given only access to that node.
tests:
  - {input: 1 2 3 4 5, output: 1 2 4 5}
  - {input: 2 2 3 4 9 78 5 2 5 3, output: 2 2 3 4 78 5 2 5 3}
  - {input: 1, output: ""}
  - {input: "", output: ""}

---

title: Add two linked lists
source: Cracking The Coding Interview by Gayle Laakman
description: |
  You have two numbers represented by a linked list, where each node contains a single digit.
  The digits are stored in reverse order, such that the 1’s digit is at the head of the list.
  Write a function that adds the two numbers and returns the sum as a linked list.
tests:
  - {input: 3 1 5 + 5 9 2, output: 8 0 8}
  - {input: 2 8 7 + 0, output: 2 8 7}
  - {input: 0 + 0, output: 0}
  - {input: 9 9 9 9 + 1, output: 1 0 0 0 0}
  - {input: 9 7 9 9 + 3 0 1, output: 1 0 1 0 0}

---

title: Circular linked list
source: Cracking The Coding Interview by Gayle Laakman
description: |
  Given a circular linked list, implement an algorithm which returns node at the beginning of the loop

  Definition Circular linked list:
  A (corrupt) linked list in which a node’s next pointer points to an earlier node,
  so as to make a loop in the linked list
tests:
  - {input: a b c d e c, output: c}
  - {input: 1 2 3 2 5, output: 2}
  - {input: 1, output: ""}
  - {input: 1 2 3 4 2 3, output: 2}

---

title: Find intersecting node
source: https://github.com/kylesteiner/coding-challenges
description: |
  Two singly linked-lists intersect at a node and merge into a single linked-list.
  The size of each is unknown and the number of nodes prior to the intersection node
  can vary in each list. Write a function to find the intersecting node.

---


title: Find sum in linked list
source: https://github.com/kylesteiner/coding-challenges
description: Find a pair of elements from two sorted lists for which the sum of the elements is a certain value.

---

title: Iterative implementation of linked list
source: https://github.com/kylesteiner/coding-challenges
description: Implement a linked list iteratively.

---

title: Recursive implementation of linked list
source: https://github.com/kylesteiner/coding-challenges
tags: recursion
description: Implement a linked list recursively.

---

title: Palindrome in linked list
source: https://github.com/kylesteiner/coding-challenges
description: Write a function to determine if a singly linked list is a palindrome.

---

title: Palindrome in linked list
source: https://github.com/kylesteiner/coding-challenges
description: |
  Write code to partition a linked list around a value x,
  such that all nodes less than x come before all nodes greater than or equal to x.

---

title: Separate odd and even numbers
source: https://github.com/kylesteiner/coding-challenges
description: |
  Given a linked list of integers, split the list into two lists such that one list
  contains only odd numbers and the other contains only even numbers.

...