statechart:
  name: Test that destinations are reached
  preamble: |
    destinations = []  # List of destinations
  root state:
    name: root
    initial: check
    states:
      - name: check
        transitions:
          - event: stopped
            guard: len(destinations) == 0
            target: success
          - event: stopped
            guard: len(destinations) > 0
            target: fail
        parallel states:
          - name: wait floor selection
            transitions:
              - event: consumed
                guard: event.consumed_event.name == 'floorSelected'
                action: destinations.append(event.consumed_event.floor)
          - name: wait doors open
            transitions:
              - event: entered
                guard: event.entered_state == 'doorsOpen'
                action: |
                  # Current floor, deduced from tested statechart's context
                  floor = context.current

                  # Remove floor from destination if it exists
                  try:
                    destinations.remove(floor)
                  except ValueError:
                    pass
      - name: success
        type: final
      - name: fail