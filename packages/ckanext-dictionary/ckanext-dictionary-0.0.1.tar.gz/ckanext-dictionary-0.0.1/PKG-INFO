Metadata-Version: 1.1
Name: ckanext-dictionary
Version: 0.0.1
Summary: A data dictionary or metadata plugin
Home-page: https://github.com//ckanext-dictionary
Author: CMU MISM capstone 2015
Author-email: cmu.edu
License: AGPL
Description: .. You should enable this project on travis-ci.org and coveralls.io to make
           these badges work. The necessary Travis and Coverage config files have been
           generated for you.
        
        .. image:: https://travis-ci.org//ckanext-dictionary.svg?branch=master
            :target: https://travis-ci.org//ckanext-dictionary
        
        .. image:: https://coveralls.io/repos//ckanext-dictionary/badge.svg
          :target: https://coveralls.io/r//ckanext-dictionary
        
        .. image:: https://pypip.in/download/ckanext-dictionary/badge.svg
            :target: https://pypi.python.org/pypi//ckanext-dictionary/
            :alt: Downloads
        
        .. image:: https://pypip.in/version/ckanext-dictionary/badge.svg
            :target: https://pypi.python.org/pypi/ckanext-dictionary/
            :alt: Latest Version
        
        .. image:: https://pypip.in/py_versions/ckanext-dictionary/badge.svg
            :target: https://pypi.python.org/pypi/ckanext-dictionary/
            :alt: Supported Python versions
        
        .. image:: https://pypip.in/status/ckanext-dictionary/badge.svg
            :target: https://pypi.python.org/pypi/ckanext-dictionary/
            :alt: Development Status
        
        .. image:: https://pypip.in/license/ckanext-dictionary/badge.svg
            :target: https://pypi.python.org/pypi/ckanext-dictionary/
            :alt: License
        
        =============
        ckanext-dictionary
        =============
        
        .. The extension adds the ability to include a data dictionary (metadata) for each dataset.
           Admins can create the data dictionary when adding the dataset, or create/modify it any other time.
           Users see the data dictionary as another tab for each dataset.
           Since this dictionary extension utilizes the DataStore extension, Data Dictionary information can
           be accessed via API.
        
        
        ------------
        Requirements
        ------------
        
        The extension requires the DataStore extension to also be installed.  
        Additionally, it only works on CKAN versions that have two current stages in the 'add dataset' dialog.
        
        
        ------------
        Installation
        ------------
        
        .. Add any additional install steps to the list below.
           For example installing any non-Python dependencies or adding any required
           config settings.
        
        To install ckanext-dictionary:
        
        1. Activate your CKAN virtual environment, for example::
        
             . /usr/lib/ckan/default/bin/activate
        
        2. Install the ckanext-dictionary Python package into your virtual environment::
        
             pip install ckanext-dictionary
        
        3. Add ``dictionary`` to the ``ckan.plugins`` setting in your CKAN
           config file (by default the config file is located at
           ``/etc/ckan/default/production.ini``).
        
        4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::
        
             sudo service apache2 reload
        
        
        ---------------
        Config Settings
        ---------------
        
        This version includes no user config settings.
        
        
        ------------------------
        Development Installation
        ------------------------
        
        To install ckanext-dictionary for development, activate your CKAN virtualenv and
        do::
        
            git clone https://github.com//ckanext-dictionary.git
            cd ckanext-dictionary
            python setup.py develop
            pip install -r dev-requirements.txt
        
        
        -----------------
        Running the Tests
        -----------------
        
        To run the tests, do::
        
            nosetests --nologcapture --with-pylons=test.ini
        
        To run the tests and produce a coverage report, first make sure you have
        coverage installed in your virtualenv (``pip install coverage``) then run::
        
            nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.dictionary --cover-inclusive --cover-erase --cover-tests
        
        
        ---------------------------------
        Registering ckanext-dictionary on PyPI
        ---------------------------------
        
        ckanext-dictionary should be availabe on PyPI as
        https://pypi.python.org/pypi/ckanext-dictionary. If that link doesn't work, then
        you can register the project on PyPI for the first time by following these
        steps:
        
        1. Create a source distribution of the project::
        
             python setup.py sdist
        
        2. Register the project::
        
             python setup.py register
        
        3. Upload the source distribution to PyPI::
        
             python setup.py sdist upload
        
        4. Tag the first release of the project on GitHub with the version number from
           the ``setup.py`` file. For example if the version number in ``setup.py`` is
           0.0.1 then do::
        
               git tag 0.0.1
               git push --tags
        
        
        ----------------------------------------
        Releasing a New Version of ckanext-dictionary
        ----------------------------------------
        
        ckanext-dictionary is availabe on PyPI as https://pypi.python.org/pypi/ckanext-dictionary.
        To publish a new version to PyPI follow these steps:
        
        1. Update the version number in the ``setup.py`` file.
           See `PEP 440 <http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers>`_
           for how to choose version numbers.
        
        2. Create a source distribution of the new version::
        
             python setup.py sdist
        
        3. Upload the source distribution to PyPI::
        
             python setup.py sdist upload
        
        4. Tag the new release of the project on GitHub with the version number from
           the ``setup.py`` file. For example if the version number in ``setup.py`` is
           0.0.2 then do::
        
               git tag 0.0.2
               git push --tags
        
Keywords: CKAN metadata data dictionary
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
