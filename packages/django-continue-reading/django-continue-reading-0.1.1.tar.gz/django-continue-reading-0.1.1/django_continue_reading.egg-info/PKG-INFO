Metadata-Version: 1.0
Name: django-continue-reading
Version: 0.1.1
Summary: Templatetag for truncating blog post bodies...
Home-page: https://github.com/cloverchio/django-continue-reading
Author: Chris Loverchio
Author-email: chrisloverchio@gmail.com
License: MIT
Description: # django-continue-reading
        Templatetag for truncating blog post bodies and adding a link that says "continue reading..." which redirects the user to the absolute url or full body of the post.
        
        ###Package
        
            https://pypi.python.org/pypi/django-continue-reading
        
        ###Installation
        ```$ pip install django-continue-reading```
        
        Add the following to your ``INSTALLED_APPS`` section
        
        ``'django_continue_reading'``
        ###How it works...
        
        If your blog application has a model object that has a ``title`` and ``body`` field
        
        ```title = models.CharField(max_length=250)```
        
        ```body = models.TextField()```
        
        You can pass the post model object and number of words you would like to truncate your post at to this templatetag
        
        ```{% load continue_reading %}```
        
        ```{% continue_reading post 80 %}```
        
        It will then truncate the number of words in your post body and append a link to the bottom
        
        ``Lorem ipsum dolor sit amet consectetur adipiscing elit Cras enim erat fermentum ut diam vitae dapibus vulputate erat Vestibulum ut aliquet turpis sed ultricies mauris Nullam non felis vehicula dui vulputate mattis bibendum vitae ipsum Nam vel volutpat augue nec consectetur neque Mauris at vulputate erat Aliquam erat volutpat Pellentesque eleifend molestie magna nec efficitur neque faucibus nec Aliquam convallis ultricies lorem ut malesuada lectus luctus vel Quisque volutpat tincidunt leo a hendrerit Suspendisse condimentum velit odio nec mattis justo...``
        
        ``continue reading``
        
        The ``continue reading`` link will use the ``absolute_url`` of your post model object to redirect the user to the full thing.
        
        
        
        
        
        
        
        
        
Keywords: django,app,reusable,blog,posts,links,module
Platform: UNKNOWN
